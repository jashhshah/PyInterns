from tkinter import *
from tkinter import messagebox
from tkinter.ttk import *
import matplotlib.pyplot as plt
import re,pymysql,os,sys,csv,xlrd
import pandas as pd
import numpy as np
from sklearn.preprocessing import LabelEncoder
from sklearn.impute import SimpleImputer
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error # 0.3 error
from sklearn.model_selection import train_test_split

pd.set_option('display.max_columns',20)
pd.set_option('display.max_rows',200)
pd.set_option('display.max_colwidth',100)
pd.set_option('display.width',1000)
#frame=Tk()
#frame.title('1st Frame')
#frame.geometry("600x400+20+40")
#frame.mainloop()
#user_review=pd.ExcelFile('C:\\Users\\Ruudra\\Desktop\\Python Internship\\googleplaystore_user_reviews.csv')
#app_data=pd.ExcelFile('C:\\Users\\Ruudra\\Desktop\\Python Internship\\googleplaystore-App-data.csv')
#apps=app_data.parse('App') #parse imports the sheet
#apps.head() #first five observations
#samdata=pd.ExcelFile('C:\\Users\\Ruudra\\Desktop\\Python Internship\\googleplaystore-App-data.csv')
df=pd.read_csv('C:\\Users\\Ruudra\\Desktop\\Python Internship\\googleplaystore-App-data.csv')
#sd=samdata.parse('Sheet1')
#a=wb.head()
#Columns are : Index(['App', 'Category', 'Rating', 'Reviews', 'Size', 'Installs', 'Type', 'Price', 'Content Rating', 'Genres', 'Last Updated', 'Current Ver', 'Android Ver']
#print(wb.columns)
#print(a)
# Data cleaning for "Size" column
df['Size'] = df['Size'].map(lambda x: x.rstrip('M'))
df['Size'] = df['Size'].map(lambda x: str(round((float(x.rstrip('k'))/1024), 1)) if x[-1]=='k' else x)
df['Size'] = df['Size'].map(lambda x: np.nan if x.startswith('Varies') else x)

# Data cleaning for "Installs" column
df['Installs'] = df['Installs'].map(lambda x: x.rstrip('+'))
df['Installs'] = df['Installs'].map(lambda x: ''.join(x.split(',')))

# Data cleaning for "Price" column
df['Price'] = df['Price'].map(lambda x: x.lstrip('$').rstrip())

# Sort by "Category"
df.sort_values("Category", inplace = True)

# Row 10472 removed due to missing value of Category
df.drop(df.index[10472], inplace=True)

# Row [7312,8266] removed due to "Unrated" value in Content Rating
df.drop(df.index[[7312,8266]], inplace=True)
print(df.head(42))
# Label encoding
##lb_make = LabelEncoder()
# Create column for "numeric" Content Rating 
##df["Content Rating NUM"] = lb_make.fit_transform(df["Content Rating"])
# Form dicitonary for Content Rating and numeric values 
##dict_content_rating = {"Adults only 18+": 0, "Everyone": 1, "Everyone 10+": 2, "Mature 17+": 3, "Teen": 4}

# Replace "NaN" with mean 
imputer = SimpleImputer()
df['Rating'] = imputer.fit_transform(df[['Rating']])

# Rounding the mean value to 1 decimal place
df['Rating'].round(1)
df.dropna(axis=0, inplace=True)

# Numeric value for Content Rating
'''
Adults only 18+ = 0
Everyone = 1
Everyone 10+ = 2
Mature 17+ = 3
Teen = 4
'''
# Create column for "numeric" Category
##df["Category NUM"] = lb_make.fit_transform(df["Category"])
# Form dicitonary for Category and numeric values
##dict_category = {}
##val = 0
##for i in df["Category"].unique():
 ##dict_category[i] = val
 ##val += 1
# Numeric value for Category
'''
ART_AND_DESIGN = 0
AUTO_AND_VEHICLES = 1
BEAUTY = 2 
BOOKS_AND_REFERENCE = 3
BUSINESS = 4
COMICS = 5
COMMUNICATION = 6
DATING = 7
EDUCATION = 8
ENTERTAINMENT = 9
EVENTS = 10
FAMILY = 11
FINANCE = 12
FOOD_AND_DRINK = 13
GAME = 14
HEALTH_AND_FITNESS = 15
HOUSE_AND_HOME = 16
LIBRARIES_AND_DEMO = 17
LIFESTYLE = 18
MAPS_AND_NAVIGATION = 19
MEDICAL = 20
NEWS_AND_MAGAZINES = 21
PARENTING = 22
PERSONALIZATION = 23
PHOTOGRAPHY = 24
PRODUCTIVITY = 25
SHOPPING = 26
SOCIAL = 27
SPORTS = 28
TOOLS = 29
TRAVEL_AND_LOCAL = 30
VIDEO_PLAYERS = 31
WEATHER = 32
'''
#df=df.head(10)
#print(df[['Category','Installs','Price','Size','Rating']])




